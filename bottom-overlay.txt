
   



    @Override
    public void onBackPressed() {



        getSupportFragmentManager().popBackStack();


    }

    public void showOverlay() {

        BottomSheetDialogFragment bottomSheetDialogFragment = new TutsPlusBottomSheetDialogFragment();
        bottomSheetDialogFragment.show(getSupportFragmentManager(), bottomSheetDialogFragment.getTag());

    }


///*********///



    private class foodAdapter extends RecyclerView.Adapter<foodAdapter.ViewHolder> {

        private String[] foodDataset;
        private Random mRandom = new Random();

        private Integer[] icons = {

                R.drawable.ic_restaurant_black_24dp, R.drawable.ic_map_24dp, R.drawable.ic_bookmark_outline_24dp,R.drawable.ic_local_library_24dp,R.drawable.ic_local_movies_24dp,R.drawable.ic_shopping_basket_24dp
        };



        public  class ViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {
            // each data item is just a string in this case

            public TextView mTextView ;


            public ImageView image ;



            public ViewHolder(View itemView) {

                super(itemView);

                itemView.setOnClickListener(this);

                mTextView = (TextView) itemView.findViewById(R.id.name);

                image = (ImageView) itemView.findViewById(R.id.image);


            }


            @Override
            public void onClick(View v) {

                final int position = getLayoutPosition();

                // ((homePage)getActivity()).homePageReplaceFragment("roomsList");


                bundle.putInt("Activity", 1);



                switch (position) {
                    case 0:


                        ((BottomSheetBehavior) behavior).setState(BottomSheetBehavior.STATE_COLLAPSED);




                        client = new AsyncHttpClient();

                        client.setConnectTimeout(20000);

                        client.get("http://www.sinopiainn.com/api/menu", new JsonHttpResponseHandler() {

                            @Override
                            public void onStart() {
                                // called before request is started
                            }

                            @Override
                            public void onSuccess(int statusCode, Header[] headers, JSONArray json) {


                                ((BottomSheetBehavior) behavior).setState(BottomSheetBehavior.STATE_COLLAPSED);

                                Fragment_Food new_fragment =  new Fragment_Food() ;

                                bundle.putInt("Activity", 1);

                                bundle.putInt("Menu", position);

                                bundle.putString("Json", json.toString());

                                new_fragment.setArguments(bundle);

                                getSupportFragmentManager().beginTransaction().setCustomAnimations(R.anim.fade_in, R.anim.fade_out,R.anim.fade_in, R.anim.fade_out).replace(R.id.container,new_fragment).addToBackStack(null).commit();


                            }

                            @Override
                            public void onFailure(int statusCode, Header[] headers, Throwable t, JSONObject e)  {
                                // Handle the failure and alert the user to retry
                                Log.e("ERROR", e.toString());
                            }
                            @Override
                            public void onRetry(int retryNo) {
                                // called when request is retried
                            }
                        });

                        break;

                    case 1:

                        ((BottomSheetBehavior) behavior).setState(BottomSheetBehavior.STATE_COLLAPSED);


                        String WEB_SERVICE_URL = "http://www.sinopiainn.com/api/businesses";

                         client = new AsyncHttpClient();

                        client.setConnectTimeout(20000);
                        client.get(WEB_SERVICE_URL, new JsonHttpResponseHandler() {

                            @Override
                            public void onStart() {
                                // called before request is started
                            }

                            @Override
                            public void onSuccess(int statusCode, Header[] headers, JSONArray json) {


                                JsonBusinesses = json;

                                Fragment_Travel_Planner travel =  new Fragment_Travel_Planner() ;

                                travel.setArguments(bundle);


                                getSupportFragmentManager().beginTransaction().setCustomAnimations(R.anim.fade_in, R.anim.fade_out).replace(R.id.container,travel).addToBackStack(null).commit();

                            }

                            @Override
                            public void onFailure(int statusCode, Header[] headers, Throwable t, JSONObject e)  {
                                // Handle the failure and alert the user to retry
                                Log.e("ERROR", e.toString());
                            }
                            @Override
                            public void onRetry(int retryNo) {
                                // called when request is retried
                            }
                        });


                        break;

                    case 2:

                        ((BottomSheetBehavior) behavior).setState(BottomSheetBehavior.STATE_COLLAPSED);

                        client = new AsyncHttpClient();

                        client.setConnectTimeout(20000);

                        client.get("http://www.sinopiainn.com/api/books", new JsonHttpResponseHandler() {

                            @Override
                            public void onStart() {
                                // called before request is started
                            }

                            @Override
                            public void onSuccess(int statusCode, Header[] headers, JSONArray json) {

                                ((BottomSheetBehavior) behavior).setState(BottomSheetBehavior.STATE_COLLAPSED);

                                Fragment_Food bookShelf =  new Fragment_Food() ;

                                bundle.putInt("Activity", 1);

                                bundle.putInt("Menu", position);

                                bundle.putString("Json",  json.toString());

                                bookShelf.setArguments(bundle);

                                getSupportFragmentManager().beginTransaction().setCustomAnimations(R.anim.fade_in, R.anim.fade_out,R.anim.fade_in, R.anim.fade_out).replace(R.id.container, bookShelf).addToBackStack(null).commit();


                            }

                            @Override
                            public void onFailure(int statusCode, Header[] headers, Throwable t, JSONObject e)  {
                                // Handle the failure and alert the user to retry
                                Log.e("ERROR", e.toString());
                            }
                            @Override
                            public void onRetry(int retryNo) {
                                // called when request is retried
                            }
                        });

                        break;
                    case 3:

    String json ="[{\"name\":\"Camel\",\"date\":\"20-04-2016\",\"rating\":\"3\",\"comment\":\"The Vette Kat Harbour Bed & Breakfast has two distinct competitive edges that differentiates it from the competition.  The first is the never-ending attention to detail and customer service.  The St. Lucia's recognize that their mission is to ensure that their customers have the finest stay with them.  Both Kayman and Jenn√© will do whatever it takes to ensure the customer's happiness.  This will be showcased in breakfast which will offer Starbucks Authorized and Certified Training System of Coffee and Tazo Tea service.\"},{\"name\":\"puce\",\"date\":\"20-04-2016\",\"rating\":\"4\",\"comment\":\"test comment\"},{\"name\":\"Test\",\"date\":\"20-04-2016\",\"rating\":\"4\",\"comment\":\"test comment\"}]";

                        Fragment_Food guestBook =  new Fragment_Food() ;

                        bundle.putInt("Activity", 1);

                        bundle.putInt("Menu", position);

                        bundle.putString("Json",json);

                        guestBook.setArguments(bundle);

                        getSupportFragmentManager().beginTransaction().setCustomAnimations(R.anim.fade_in, R.anim.fade_out,R.anim.fade_in, R.anim.fade_out).replace(R.id.container, guestBook).addToBackStack(null).commit();




                      /*  ((BottomSheetBehavior) behavior).setState(BottomSheetBehavior.STATE_COLLAPSED);

                        client = new AsyncHttpClient();

                        client.setConnectTimeout(20000);

                        client.get("http://www.sinopiainn.com/api/reviews", new JsonHttpResponseHandler() {

                            @Override
                            public void onStart() {
                                // called before request is started
                            }

                            @Override
                            public void onSuccess(int statusCode, Header[] headers, JSONArray json) {

                                ((BottomSheetBehavior) behavior).setState(BottomSheetBehavior.STATE_COLLAPSED);

                                Fragment_Food guestBook =  new Fragment_Food() ;

                                bundle.putInt("Activity", 1);

                                bundle.putInt("Menu", position);

                                bundle.putString("Json",json.toString());

                                guestBook.setArguments(bundle);

                                getSupportFragmentManager().beginTransaction().setCustomAnimations(R.anim.fade_in, R.anim.fade_out,R.anim.fade_in, R.anim.fade_out).replace(R.id.container, guestBook).addToBackStack(null).commit();


                            }

                            @Override
                            public void onFailure(int statusCode, Header[] headers, Throwable t, JSONObject e)  {
                                // Handle the failure and alert the user to retry
                                Log.e("ERROR", e.toString());
                            }
                            @Override
                            public void onRetry(int retryNo) {
                                // called when request is retried
                            }
                        });
*/

                        break;
                    case 4:


                        ((BottomSheetBehavior) behavior).setState(BottomSheetBehavior.STATE_COLLAPSED);

                        client = new AsyncHttpClient();

                        client.setConnectTimeout(20000);

                        client.get("http://www.sinopiainn.com/api/tv", new JsonHttpResponseHandler() {

                            @Override
                            public void onStart() {
                                // called before request is started
                            }

                            @Override
                            public void onSuccess(int statusCode, Header[] headers, JSONArray json) {

                                ((BottomSheetBehavior) behavior).setState(BottomSheetBehavior.STATE_COLLAPSED);

                                Fragment_Food tv =  new Fragment_Food() ;

                                bundle.putInt("Activity", 1);

                                bundle.putInt("Menu", position);

                                bundle.putString("Json",json.toString());

                                tv.setArguments(bundle);

                                getSupportFragmentManager().beginTransaction().setCustomAnimations(R.anim.fade_in, R.anim.fade_out,R.anim.fade_in, R.anim.fade_out).replace(R.id.container, tv).addToBackStack(null).commit();


                            }

                            @Override
                            public void onFailure(int statusCode, Header[] headers, Throwable t, JSONObject e)  {
                                // Handle the failure and alert the user to retry
                                Log.e("ERROR", e.toString());
                            }
                            @Override
                            public void onRetry(int retryNo) {
                                // called when request is retried
                            }
                        });



                        break;
                    case 5:


                       /* ((BottomSheetBehavior) behavior).setState(BottomSheetBehavior.STATE_COLLAPSED);

                        fragment_shop shop =  new fragment_shop() ;

                        shop.setArguments(bundle);


                        getSupportFragmentManager().beginTransaction().setCustomAnimations(R.anim.fade_in, R.anim.fade_out).replace(R.id.container, shop).addToBackStack(null).commit();
*/
                        break;


                }


            }

        }

        public foodAdapter(Object p0) {

        }

        // Provide a suitable constructor (depends on the kind of dataset)
        public foodAdapter(Context context, String[] foodset) {

            foodDataset = foodset;

        }


        @Override
        public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
            View v = LayoutInflater.from(parent.getContext()).inflate(R.layout.listitemamentitylayout, parent, false);

            ViewHolder vh = new ViewHolder(v);

            return vh;
        }

        @Override
        public void onBindViewHolder(ViewHolder holder, int position) {

            holder.mTextView.setText(foodDataset[position]);
            holder.image.setImageResource(icons[position]);


        }
        @Override
        public int getItemCount() {
            return foodDataset.length;
        }

    }


    public class TutsPlusBottomSheetDialogFragment extends BottomSheetDialogFragment {

        private BottomSheetBehavior.BottomSheetCallback mBottomSheetBehaviorCallback = new BottomSheetBehavior.BottomSheetCallback() {

            @Override
            public void onStateChanged(@NonNull View bottomSheet, int newState) {
                if (newState == BottomSheetBehavior.STATE_HIDDEN) {
                    dismiss();
                }

            }

            @Override
            public void onSlide(@NonNull View bottomSheet, float slideOffset) {
            }
        };

        @Override
        public void setupDialog(Dialog dialog, int style) {

            super.setupDialog(dialog, style);

            View contentView = View.inflate(getContext(), R.layout.fragment_bottom_sheet, null);

            dialog.setContentView(contentView);

            CoordinatorLayout.LayoutParams params = (CoordinatorLayout.LayoutParams) ((View) contentView.getParent()).getLayoutParams();

            behavior = params.getBehavior();



            // overlay = (LinearLayout) contentView.findViewById(R.id.overlay);



            mRecyclerView = (RecyclerView) contentView.findViewById(R.id.recycler);

            mRecyclerView.setFadingEdgeLength(150);

            // use this setting to improve performance if you know that changes
            // in content do not change the layout size of the RecyclerView
            mRecyclerView.setHasFixedSize(true);


            mLayoutManager = new LinearLayoutManager(getActivity());


            mRecyclerView.setLayoutManager(mLayoutManager);

            mAdapter = new foodAdapter(getActivity(),menu);

            // specify an adapter (see also next example)
            // mAdapter = new foodAdapter(foods);

            mRecyclerView.setAdapter(mAdapter);


            if( behavior != null && behavior instanceof BottomSheetBehavior ) {
                ((BottomSheetBehavior) behavior).setBottomSheetCallback(mBottomSheetBehaviorCallback);

                ((BottomSheetBehavior) behavior).setPeekHeight(1200);

            }
        }
    }